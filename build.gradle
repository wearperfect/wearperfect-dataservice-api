plugins {
	id 'org.springframework.boot' version '2.3.9.RELEASE'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "org.asciidoctor.convert" version "1.5.8"
	id "java"
}

group = "com.wearperfect.dataservice.api"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = "1.8"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set("snippetsDir", file("build/generated-snippets"))
	set("mapstructVersion", "1.4.1.Final")
	set("jpamodelgenVersion", "5.4.25.Final")
	set('springCloudVersion', "Hoxton.SR10")
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-data-rest"
	implementation "org.springframework.boot:spring-boot-starter-hateoas"
	implementation "org.springframework.boot:spring-boot-starter-mail"
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation 'org.springframework.cloud:spring-cloud-starter-aws'
	implementation "org.springframework.data:spring-data-rest-hal-explorer"
	implementation "org.springframework.boot:spring-boot-starter-security"
	compile group: "com.fasterxml.jackson.dataformat", name: "jackson-dataformat-xml", version: "2.11.3"
	compileOnly "org.projectlombok:lombok"
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	compileOnly "org.hibernate:hibernate-jpamodelgen:${jpamodelgenVersion}"
	developmentOnly "org.springframework.boot:spring-boot-devtools"
	runtimeOnly "mysql:mysql-connector-java"
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"	
    annotationProcessor("org.hibernate:hibernate-jpamodelgen:${jpamodelgenVersion}")
	testImplementation("org.springframework.boot:spring-boot-starter-test") {
		exclude group: "org.junit.vintage", module: "junit-vintage-engine"
	}
	testImplementation "org.springframework.security:spring-security-test"
	testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

compileJava {
	options.compilerArgs = [
		"-Amapstruct.defaultComponentModel=spring"
	]
}

sourceSets.configureEach { sourceSet ->
  tasks.named(sourceSet.compileJavaTaskName).configure {
    options.annotationProcessorGeneratedSourcesDirectory = file("$buildDir/generated/sources/annotationProcessor/java/${sourceSet.name}")
  }
}